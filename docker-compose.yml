version: '3'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-network


  spark:
    build: ./spark/
    networks:
      - kafka-network
    container_name: "safeGuard-spark"
    depends_on:
      - elasticsearch
    volumes:
        - ./spark/data/container_data:/dataset_output/
        
  fluentbit:
    image: fluent/fluent-bit:1.8
    container_name: fluentbit
    ports: 
      - 9090:9090
    volumes:
      - ./fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
    depends_on:
      - kafka
    networks:
      - kafka-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafkaWebUI
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:39092
      DYNAMIC_CONFIG_ENABLED: 'true'
    ports: 
        - 8585:8080
    networks: 
        - kafka-network
    depends_on:
        - kafka

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: safeGuard:1:1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:39092,HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:39092,HOST://localhost:9092
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 1347375956 #campo richiesta
    networks:
      - kafka-network

  flask:
    build: ./flask/
    networks:
      - kafka-network
    container_name: "webserver-flask"
    depends_on:
      - elasticsearch
    ports: 
      - 9393:5000

  elasticsearch-setup:
    image: busybox
    volumes:
      - ./esdata:/usr/share/elasticsearch/data
    command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data"]
    networks:
      - kafka-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.1-amd64
    container_name: elasticsearch
    depends_on:
      - kafka
    user: "1000:1000"
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "xpack.security.enabled=false"
      - "search.max_async_search_response_size=100mb"
    volumes_from:
      - elasticsearch-setup
    command: ["sh", "-c", "exec elasticsearch"]
    ports:
      - 9200:9200
    networks:
      - kafka-network


  kibana:
    image: docker.elastic.co/kibana/kibana:8.7.1-amd64
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.license.self_generated.type=basic
      - xpack.security.enabled=false
      - xpack.graph.enabled=false
      - xpack.ml.enabled=false
      - xpack.reporting.enabled=false
      - xpack.watcher.enabled=false
      - xpack.maps.enabled=false
    networks:
      - kafka-network
    depends_on:
       - elasticsearch

networks:
  kafka-network:
    driver: bridge

